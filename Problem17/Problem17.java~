import java.util.*;
import java.io.*;
import java.util.Scanner;

public class Problem117 {
    
    private static int[] lookup;
    
    public static void go() {
        lookup = new int[10];
        lookup[0] = 4;
        lookup[1] = 3;
        lookup[2] = 3;
        lookup[3] = 5;
        lookup[4] = 4;
        lookup[5] = 4;
        lookup[6] = 3;
        lookup[7] = 5;
        lookup[8] = 5;
        lookup[9] = 4;
        lookup[10] = 3;
        lookup[11] = 6;
        lookup[12] = 6;
        lookup[13] = 8;
        lookup[14] = 8;
        lookup[15] = 7;
        lookup[16] = 7;
        lookup[17] = 9;
        lookup[18] = 9;
        lookup[19] = 8;
        lookup[20] = 6;
        lookup[30] = 6;
        lookup[40] = 6;
        lookup[50] = 6;
        lookup[60] = 6;
        lookup[70] = 6;
        lookup[80] = 6;
        lookup[90] = 6;
        lookup[100] = 6;
        
        int sum = 0;
        for (int i=1; i<=999; i++) {
            System.out.println(numChars(i));
            sum += numChars(i);
        }
        sum += 11; // 1000
        System.out.println(sum);
    }
    
    public int numChars(int num) {
        if (num <= 20)
            return lookup[num];
        else if(num <= 100 && num % 10 == 0)
            return lookup[num];
        else if(num < 100)
            return (numChars(num - (num % 10)) + numChars(num % 10));
        else if (num % 100 == 0)
            return lookup[(int) (num / 100)] + "hundred".length();
        else
            return lookup[(int) (num / 100)] + "hundred".length() + "and".length() + numChars(num % 100);
    }
    
}